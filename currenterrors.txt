error[E0252]: the name `Instant` is defined multiple times
   --> src/main.rs:138:13
    |
108 |         use std::time::Instant;
    |             ------------------ previous import of the type `Instant` here
...
138 |         use std::time::Instant;
    |             ^^^^^^^^^^^^^^^^^^ `Instant` reimported here
    |
    = note: `Instant` must be defined only once in the type namespace of this block

warning: unused import: `std::time::Instant`
   --> src/main.rs:138:13
    |
138 |         use std::time::Instant;
    |             ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

error[E0063]: missing fields `buf_k`, `buf_o`, `buf_q` and 9 other fields in initializer of `vk::VkBackend`
   --> src/vk.rs:256:12
    |
256 |         Ok(Self {
    |            ^^^^ missing `buf_k`, `buf_o`, `buf_q` and 9 other fields

error[E0716]: temporary value dropped while borrowed
   --> src/vk.rs:376:70
    |
376 |         let submit_info = vk::SubmitInfo::builder().command_buffers(&[cmd]);
    |                                                                      ^^^^^ - temporary value is freed at the end of this statement
    |                                                                      |
    |                                                                      creates a temporary value which is freed while still in use
377 |         unsafe {
378 |             dev.queue_submit(self.queue, &[*submit_info], vk::Fence::null())?;
    |                                             ----------- borrow later used here
    |
help: consider using a `let` binding to create a longer lived value
    |
376 ~         let binding = [cmd];
377 ~         let submit_info = vk::SubmitInfo::builder().command_buffers(&binding);
    |
